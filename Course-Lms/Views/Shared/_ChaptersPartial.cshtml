@using Course_Lms.Logic.DTO
@model List<ChapterDTO>
@{
	var sortedChapters = Model.OrderBy(chapter => chapter.Position).ToList();
	Layout = null;
}
<style>
	.chapter-card {
		margin-bottom: 1rem;
		border-radius: 0.375rem;
		border-width: 1px;
		font-size: 0.92rem;
		color: rgb(51 65 85);
		border-color: rgb(226 232 240);
		cursor: grab;
	}

	span{
		cursor:default;
	}

	i {
		font-size: 14px;
		width: 1rem;
		height: 1rem;
		transition-property: opacity;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 300ms;
		cursor:pointer;
	}
		i:hover {
			opacity: 0.75;
		}
</style>
@foreach (var chapter in sortedChapters)
{
	<div class="chapter-card" data-chapter-id="@chapter.Id">
		<i class="bi bi-grid-3x3-gap" style="width: 1.25rem;height: 1.25rem;cursor:grab;"></i>
		@chapter.Title
		<div class="float-end" style="display: flex;padding-right: 0.5rem;column-gap: 0.5rem;align-items: center;">
			@if (chapter.IsFree)
			{

				<span class="badge rounded-pill bg-dark">Free</span>
			}
			@if (chapter.IsPublished)
			{
				<span class="badge rounded-pill" style="background-color: rgb(6, 104, 160)">Published</span>
			}
			else
			{

				<span class="badge rounded-pill bg-secondary" style="background-color: rgb(100 116 139);">Draft</span>
			}
			<a href="@Url.Action("ChapterSetup", "Chapters", new { chapterId = chapter.Id,chapter.CourseId })">
				<i class="bi bi-pencil"></i>

			</a>
		</div>


	</div>

}
