@using Course_Lms.ViewModels
@model ChapterSetupViewModel
@{
	ViewData["Title"] = "CourseSetup";
}
<head>
	<link rel="stylesheet" href="https://cdn.plyr.io/3.7.8/plyr.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-toast-plugin/1.3.2/jquery.toast.css" integrity="sha512-8D+M+7Y6jVsEa7RD6Kv/Z7EImSpNpQllgaEIQAtqHcI0H6F4iZknRj0Nx1DCdB+TwBaS+702BGWYC0Ze2hpExQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<style>
	.swal-confirm-btn {
		margin-left: 20px;
	}

	.custom-actions {
		justify-content: flex-end !important;
	}

	.swal-title-left {
		color: black !important;
		text-align: left !important;
	}

	.swal-html-left {
		color: rgb(131 133 137 / 76%) !important;
		text-align: left !important;
	}

	.swal2-popup {
		display: block !important;
	}

	.custom-cancel-button {
	}

	.icon {
		height: 1rem;
		width: 1rem;
		margin-right: 0.5rem;
	}

	.save-div {
		display: flex;
		align-items: center;
		column-gap: 0.5rem;
	}

	.card {
		margin-top: 1.5rem;
		border-width: 1px;
		background-color: white;
		padding: 1rem;
		border-radius: 0.375rem;
		transition: background 0.6s ease-in;
	}

		.card:hover {
			background: linear-gradient(rgb(243 246 253), rgb(208 209 235 / 87%));
		}

	.card-header {
		font-weight: 500;
		justify-content: space-between;
		align-items: center;
		display: flex;
	}

	.custom-icon {
		color: rgb(3 105 161);
		background-color: rgb(224 242 254);
		padding: 0.25rem;
	}

	.edit-button, .access-edit-button, .video-edit-button {
		text-decoration: none;
		font-size: 14px !important;
	}

	

	.field-validation-error {
		color: #dc3545;
	}

	.description-input {
		background: #f5f5f5;
		border: 1px solid #ddd;
		padding: 5px;
		overflow-y: hidden; /* Hide vertical scrollbar */
		resize: none;
		height: auto;
	}

		.description-input::placeholder {
			color: #555;
			font-style: italic; /* Optionally, make the placeholder italic */
		}

	.back-button {
		display: flex;
		align-items: center;
		font-size: 0.875rem;
		line-height: 1.25rem;
		margin-bottom: 1.5rem;
		transition-property: opacity;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}

		.back-button i {
			height: 1rem;
			width: 1rem;
			margin-right: 0.5rem;
		}

		.back-button:hover {
			opacity: 0.75;
		}


	
</style>
<div class="custom-alert warning" id="warningNotification">
	<i class="bi bi-exclamation-triangle"></i>
	This chapter is unpublished. It will not be visible in the course.
</div>

<div style="padding:1.5rem;">
	<div style="display:flex;align-items:center;justify-content: space-between;">
		<div style="width:100%;">
			<a href="@Url.Action("CourseSetup", "Courses", new { id = Model.CourseId })" class="btn back-button">
				<i class="bi bi-arrow-left"></i> Back to course setup
			</a>
			<div class="completionText" style=" display:flex;justify-content: space-between;align-items: center;width: 100%;">
			</div>
		</div>
	</div>
</div>
<div class="container mt-3">
	<input class="id" type="hidden" asp-for="Id" />
	<div class="row">
		<div class="col-md-6 mb-3">
			<h4><i class="bi bi-columns-gap custom-icon rounded-circle"></i> Customize your</h4>
			<form id="titleForm">
				<div class="card">
					<div class="card-header">
						Chapter title
						<button type="button" class="btn edit-button" data-form="#titleForm"><i class="bi bi-pencil icon"></i> Edit Title</button>
					</div>
					<div class="card-body">
						<input asp-for="Title" class="form-control" placeholder="Introduction to the Course..." disabled />
						<span asp-validation-for="Title" class="field-validation-error"></span>
					</div>
					<div class="save-div">
						<button type="submit" class="btn btn-dark save-button" style="display:none; ">Save</button>
					</div>
				</div>
			</form>
			<form id="descriptionForm">
				<div class="card">
					<div class="card-header">
						Chapter description
						<button type="button" class="btn edit-button " data-form="#descriptionForm"><i class="bi bi-pencil icon"></i> Edit Description</button>
					</div>
					<div class="card-body">
						<textarea asp-for="Description" class="form-control description-input" placeholder="The chapter is about..." disabled></textarea>
						<span asp-validation-for="Description" class="field-validation-error"></span>
					</div>
					<div class="save-div">
						<button type="submit" class="btn btn-dark save-button" style="display:none; ">Save</button>
					</div>
				</div>
			</form>
			<p>
				<h4><i class="bi bi-eye custom-icon rounded-circle"></i> Access Settings</h4>
			</p>
			<div class="card">
				<div class="card-header">
					Chapter access
					<button type="button" class="btn access-edit-button" data-form="#accessForm"><i class="bi bi-pencil icon"></i> Edit access</button>
				</div>
				<div class="card-body">
					<p id="accessText" style="color: rgb(100 116 139); font-style:italic">
						@if (Model.IsFree)
						{
							<span>This chapter is free for preview</span>
						}
						else
						{
							<span>This chapter is not free</span>
						}
					</p>
					<form id="accessForm" style="display:none;">
						<input type="checkbox" asp-for="IsFree" class="access-input" />
						<span class="small text-muted">Check this box if you want to make this chapter free for preview</span>

					</form>
				</div>
				<div class="save-div">
					<button type="submit" class="btn btn-dark access-save-button" style="display:none; ">Save</button>
				</div>
			</div>
		</div>
		<div class="col-md-6 mb-3">
			<p>
				<h4><i class="bi bi-camera-video custom-icon rounded-circle "></i> Add a video </h4>
			</p>
			<div class="card video-card">
				<div class="card-header">
					Chapter Video
					@if (Model.VideoUrl == null)
					{
						<button type="button" class="btn video-edit-button"><i class="bi bi-plus-circle icon"></i> Add Video</button>
					}
					else
					{
						<button type="button" class="btn video-edit-button"><i class="bi bi-pencil icon"></i> Edit Video</button>
					}
				</div>
				<div class="card-body">
					@if (Model.VideoUrl != null)
					{
						<div id="video-container">
							@await Component.InvokeAsync("VideoPlayer", new { chapterId = Model.Id, filename = Model.VideoUrl })
						</div>
					}
					else
					{
						<div id="video-container">
							@await Html.PartialAsync("~/Views/Chapters/Partials/_MissingVideoPlayerPartial.cshtml")
						</div>
					}
					<div id="videoUploadFormContainer" style="display: none;">
						@await Html.PartialAsync("~/Views/Chapters/Partials/_VideoUploadPartial.cshtml")
					</div>
				</div>
			</div>
		</div>
	</div>
</div>



<script src="https://cdn.plyr.io/3.7.8/plyr.polyfilled.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link href="https://cdn.jsdelivr.net/npm/&#64;sweetalert2/theme-bootstrap-4/bootstrap-4.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
<script type="module" src="~/js/ChapterSetup.js"></script>
<script>
	$('.video-edit-button').on('click', function () {
		let card = $('.video-card');
		let isEditing = card.hasClass('editing');
		if (isEditing) {
			toggleVideoEditability(false);
		} else {
			toggleVideoEditability(true);
		}

	});
	function toggleVideoEditability(isEditing) {
		let card = $('.video-card');
		if (isEditing) {
			card.addClass('editing');
			$('.video-edit-button').html('<i class="bi bi-x icon"></i> Cancel ');
			$('#videoUploadFormContainer').show();
			$('#video-container').hide();
		} else {
			$('.video-edit-button').html('<i class="bi bi-pencil icon"></i> Edit Video');
			$('#video-container').show();
			$('#videoUploadFormContainer').hide();
			card.removeClass('editing');
		}
	}
</script>